{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My-Cyber-Knowledge","text":"<p>This is my cyber security acknowlege wiki.</p>"},{"location":"#section-breakdown","title":"Section Breakdown","text":"<ul> <li>Usefull Tools and Software</li> <li>Github</li> <li>Forensic</li> <li>OSINT</li> <li>SIEM<ul> <li>Wazuh</li> </ul> </li> <li>CheatSheets<ul> <li>Vim</li> <li>Linux</li> <li>Ascii</li> <li>ASM x64</li> <li>Ffmpeg</li> </ul> </li> </ul>"},{"location":"forensic/","title":"Forensic","text":"<p>Forensics is the application of scientific methods and techniques to investigate crimes and gather evidence that can stand up in a court of law. It spans multiple disciplines, including digital forensics, forensic biology, forensic chemistry, and forensic anthropology. By methodically analyzing data and artifacts, forensic experts play a crucial role in solving crimes and ensuring justice.</p>"},{"location":"forensic/#tools","title":"Tools","text":"<ul> <li><code>dd.exe</code> - dd.exe is a Windows port of the classic Unix disk cloning and imaging tool.</li> <li><code>winpmem.exe</code> - WinPmem is a powerful memory acquisition tool designed for Windows systems.</li> <li><code>TestDisk</code> - TestDisk checks the partition and boot sectors of your disks. It is very useful in recovering lost partitions.</li> <li><code>PhotoRec</code> - PhotoRec is file data recovery software designed to recover lost pictures from digital camera memory or even hard disks.</li> <li><code>Volatility</code> - The Volatility Framework is a completely open collection of tools, implemented in Python under the GNU General Public License, for the extraction of digital artifacts from volatile memory (RAM) samples.</li> </ul>"},{"location":"forensic/#dd","title":"dd","text":"<p>Source | Download</p> <pre><code>dd.exe if=\\\\?\\Device\\Harddisk(X)\\Partition0 of=Z:\\disk.raw --progress bs=17408\n</code></pre>"},{"location":"forensic/#winpmem","title":"WinPmem","text":"<p>Source | Download</p> <pre><code>winpmem.exe --output memory_dump.raw\n</code></pre>"},{"location":"forensic/#testdisk","title":"TestDisk","text":"<p>Source</p> <pre><code>sudo apt install testdisk\n</code></pre> <pre><code>testdisk &lt;file&gt;\n</code></pre>"},{"location":"forensic/#photorec","title":"PhotoRec","text":"<p>Source</p> <pre><code>sudo apt install testdisk\n</code></pre> <pre><code>photorec &lt;file&gt;\n</code></pre>"},{"location":"forensic/#volatility-2","title":"Volatility 2","text":"<p>Source</p> <pre><code>git clone https://github.com/volatilityfoundation/volatility.git\nsudo wget https://bootstrap.pypa.io/pip/2.7/get-pip.py\nsudo apt install python2.7 python2.7-dev\nsudo python2.7 get-pip.py\nsudo python2.7 -m pip install --upgrade setuptools\nsudo python2.7 -m pip install pycrypto\nsudo python2.7 -m pip install distorm3==3.4.4\n</code></pre> <p>Modify shebang to <code>#!/usr/bin/python2.7</code> and enable execution</p> <p>Fistly, you need to get the image profile :</p> <pre><code>./vol.py -f &lt;file&gt; imageinfo\n</code></pre> <pre><code>./vol.py -f &lt;file&gt; --profile=&lt;profile_name&gt; &lt;cmd&gt;\n</code></pre> <p>Some commands :</p> <ul> <li><code>filescan</code> : Pool scanner for file objects</li> <li><code>svcscan</code> : Scan for Windows services</li> <li><code>pslist</code> : Print all running processes by following the EPROCESS lists</li> <li><code>mftparser</code> : Scans for and parses potential MFT entries</li> <li><code>memdump -p &lt;pid&gt; --dump-dir &lt;output_directory&gt;</code> :</li> <li><code>hivelist</code> : Print list of registry hives.</li> <li><code>printkey</code> : Print a registry key, and its subkeys and values</li> <li><code>envars</code> :</li> </ul>"},{"location":"forensic/#checksum-date-archive","title":"Checksum &amp; Date &amp; Archive","text":"<pre><code>md5sum &lt;file&gt; &amp;&amp; date\nsha256sum &lt;file&gt; &amp;&amp; date\nzip -r -0 &lt;archive_name&gt;.zip &lt;file_to_zip&gt;\ntar -cf &lt;archive_name&gt;.tar &lt;file_to_zip&gt;\n</code></pre>"},{"location":"forensic/#memprocfs","title":"Memprocfs","text":"<p>Source</p> <pre><code>memprocfs -f &lt;image&gt; -forensic 1 -mount &lt;directory&gt;\n</code></pre>"},{"location":"forensic/#steps-of-forensic","title":"Steps of forensic","text":"<ol> <li>Network Isolation</li> <li>Initial Assessment (Crisis management: You, IT Director, Manager, First Responder)</li> <li>Time Synchronization Verification (Check watches and system clocks)</li> <li>RAM Dump Acquisition</li> <li>RAM Dump Integrity Verification (MD5 checksum of RAM.dmp)</li> <li>Disk Image Acquisition</li> <li>Disk Image Integrity Verification (MD5 checksum of Disk.dmp)</li> <li>Archiving (Uncompressed .tar format)</li> <li>Archive Integrity Verification (MD5 checksum)</li> <li>Start RAM and Disk Analysis</li> <li>Final Integrity Verification (Checksum validation)</li> <li>Forensic Report Preparation</li> <li>Conclusions and Recommendations</li> </ol>"},{"location":"forensic/#linux","title":"Linux","text":""},{"location":"github/","title":"Github","text":""},{"location":"github/#generate-new-ssh-key","title":"Generate new ssh key","text":"<pre><code>$ ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre>"},{"location":"github/#commits-manipulations","title":"Commits manipulations","text":""},{"location":"github/#go-back-to-a-commit","title":"Go back to a commit","text":"<p>Go back to a commit with staged changes with the following command :</p> <pre><code>$ git reset --soft &lt;commit hash&gt;\n</code></pre> <p>Go back to a commit without the staged changes with the following command :</p> <pre><code>$ git reset --hard &lt;commit hash&gt;\n</code></pre> <p>Notes that a force-pushing will be required to override the history.</p>"},{"location":"github/#edit-commits-information","title":"Edit commits information","text":"<p>Updating the last Commit</p> <p>You can change your past commit information such as author, message, etc..</p> <pre><code>$ git commit --amend\n</code></pre> <p>The command above loads the previous commit message into an editor session, where you can make changes to the message, save those changes and exit. When you save and close the editor, the editor writes a new commit containing that updated commit message and makes it your new last commit.</p> <p>Updating Multiple Commits</p> <p>To modify multiple commits, combine <code>commit --amend</code> with <code>rebase</code>:</p> <pre><code>$ git rebase -i &lt;commit hash&gt;\n</code></pre> <p>When using interactive rebase, you will be presented with a list of commits. You can choose actions (commands) to apply to each commit. To amend a commit, use the <code>edit</code> command.</p> <p>After saving and exiting the interactive editor, Git will stop at the commit marked for editing. You might see something like this:</p> <pre><code>$ git rebase -i HEAD~3\nStopped at f7f3f6d... Change my name a bit\nYou can amend the commit now, with\n\n       git commit --amend\n\nOnce you're satisfied with your changes, run\n\n       git rebase --continue\n</code></pre> <p>Repeat the process for each <code>edit</code> until the rebase is complete.</p> <p>Notes:</p> <ul> <li>Force-pushing (<code>git push --force</code>) will be required after amending or rebasing.</li> <li><code>&lt;commit hash&gt;</code> can be replaced by <code>HEAD~x</code> (e.g. <code>HEAD~3</code>) to get the last <code>x</code> commits.</li> </ul>"},{"location":"github/#workflows","title":"Workflows","text":"<p>GitHub workflows are automated processes defined in YAML files that enable developers to streamline tasks such as code building, testing, deployment, and custom automation based on events like code pushes or pull requests.</p>"},{"location":"github/#structure","title":"Structure","text":"<p>Your workflows must be located in <code>.github/workflows</code> directory.</p> <pre><code>.\n\u251c\u2500\u2500 .git/\n    \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 .github/\n    \u2514\u2500\u2500 workflows/\n        \u2514\u2500\u2500 &lt;your_workflow&gt;.yml\n...\n</code></pre>"},{"location":"github/#yaml-file-structure","title":"Yaml file structure","text":"<p>To set up a valid GitHub workflow, you must include some required parameters in your YAML file. Below are key parameters and their descriptions:</p> <p><code>name</code> : The name of the workflow. This is a descriptive identifier for the workflow that appears in the GitHub Actions UI.</p> <p><code>on</code> : Specifies the events that trigger the workflow. Common events are <code>push</code>, <code>pull_request</code>, and custom events.</p> <p><code>on.push.branches</code> : Specifies which branches trigger the workflow on push events.</p> <p><code>env</code> : Defines environment variables that are available to all jobs and steps in the workflow.</p> <p><code>jobs</code> : A collection of jobs to be executed in the workflow. Each job can run on a specific environment and container.</p> <p><code>jobs.&lt;your_job&gt;.runs-on</code> : Specifies the type of machine to run the job on. Common options are <code>ubuntu-latest</code>, <code>windows-latest</code>, and <code>macos-latest</code>.</p> <p><code>jobs.&lt;your_job&gt;.container</code> : Defines the container environment for the job. This is useful for running jobs in a custom Docker image.</p> <p><code>jobs.&lt;your_job&gt;.steps</code> : Defines the individual steps to be executed in the job. Each step can run commands, use actions, or set up environments.</p> <p>To fail a job's step manually, you can <code>exit 1</code> when running a command.</p> <p>Here is a structure of a github workflow yaml file :</p> <pre><code>name: &lt;workflow_name&gt;\n\non:\n  push:\n    branches:\n      - &lt;branch1&gt;\n      - &lt;branch2&gt;\n  pull_request:\n    branches:\n      - &lt;branch1&gt;\n      - &lt;branch2&gt;\n\nenv:\n  ENV_KEY: &lt;value&gt;\n\njobs:\n  &lt;your_job_name&gt;:\n    runs-on: &lt;chosen_os&gt;\n    container:\n      image: &lt;chosen_image&gt;\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n      - name: &lt;your_step_name_1&gt;\n        run: &lt;your_command&gt;\n      - name: &lt;your_step_name_2&gt;\n        timeout-minutes: 2\n        run: &lt;your_command&gt;\n\n  &lt;your_job_2&gt;:\n  ...\n</code></pre> <p>Here is an exemple of a basic github workflow :</p> <pre><code>name: Makefile CI\n\non:\n  push:\n    branches: [ \"main\" ]\n  pull_request:\n    branches: [ \"main\" ]\n\njobs:\n  build:\n\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: configure\n      run: ./configure\n\n</code></pre>"},{"location":"github/#actions-secrets","title":"Actions secrets","text":"<p>Secrets and variables allow you to manage reusable configuration data. Secrets are encrypted and are used for sensitive data.</p> <p>You can found your secrets at <code>Your Repository overview</code> -&gt; <code>Settings</code> -&gt; <code>Secrets and Variables</code> -&gt; <code>Actions</code>.</p> <p>To call a secret you have to use this syntaxe : <code>${{ secrets.YOUR_SECRET }}</code>.</p> <p>More documentation on github.</p>"},{"location":"osint/","title":"OSINT","text":""},{"location":"usefull_tools_and_software/","title":"Usefull Tools and Software","text":""},{"location":"usefull_tools_and_software/#mkdocs","title":"Mkdocs","text":"<p>MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.</p> <p></p> <p></p>"},{"location":"usefull_tools_and_software/#marp","title":"Marp","text":"<p>Marp (also known as the Markdown Presentation Ecosystem) provides an intuitive experience for creating beautiful slide decks. You only have to focus on writing your story in a Markdown document.</p> <p></p> <p></p>"},{"location":"usefull_tools_and_software/#ventoy","title":"Ventoy","text":"<p>Ventoy is an open source tool to create bootable USB drive for ISO/WIM/IMG/VHD(x)/EFI files. With ventoy, you don't need to format the disk over and over, you just need to copy the ISO/WIM/IMG/VHD(x)/EFI files to the USB drive and boot them directly.</p> <p></p> <p></p>"},{"location":"cheatsheets/ascii/","title":"Ascii","text":""},{"location":"cheatsheets/ascii/#standard-ascii-0-127","title":"Standard ASCII (0-127)","text":""},{"location":"cheatsheets/ascii/#extended-ascii-128-255","title":"Extended ASCII (128-255)","text":""},{"location":"cheatsheets/asmx64/","title":"ASM X64","text":"<p>https://x64.syscall.sh/</p>"},{"location":"cheatsheets/asmx64/#registry","title":"Registry","text":"64-bit 32 bits 16 bits Higher &amp; Lower 8 bits RAX EAX AX AH / AL RBX EBX BX BH / BL RCX ECX CX CH / CL RDX EDX DX DH / DL RSI ESI SI SIL RBP EBP BP BPL RSP ESP SP SPL RDI EDI DI DIL R8 R8D R8W R8B R9 R9D R9W R9B R10 R10D R10W R10B R11 R11D R11W R11B R12 R12D R12W R12B R13 R13D R13W R13B R14 R14D R14W R14B R15 R15D R15W R15B"},{"location":"cheatsheets/asmx64/#data-definition-directives","title":"Data Definition Directives","text":"<p>Data Definition Directives in assembly language are compiler directives that allocate and initialize memory for variables in a program. These directives define variables with specific sizes and values in the .data or .bss section of an assembly program. They help reserve space for storing numbers, characters, floating-point values, and pointers in memory.</p>"},{"location":"cheatsheets/asmx64/#data-reservation-directives-in-data","title":"Data Reservation Directives in <code>.data</code>","text":"Directive Meaning Size (Bytes) Example Usage DB (Define Byte) Reserves 1 byte 1 byte <code>var1 DB 0x12</code> (1 byte) DW (Define Word) Reserves 1 word 2 bytes <code>var2 DW 0x1234</code> (2 bytes) DD (Define Doubleword) Reserves 1 doubleword 4 bytes <code>var3 DD 0x12345678</code> (4 bytes) DQ (Define Quadword) Reserves 1 quadword 8 bytes <code>var4 DQ 0x123456789ABCDEF0</code> (8 bytes) DT (Define Ten Bytes) Reserves 1 ten-byte value 10 bytes <code>var5 DT 123.456</code> (used for floating-point values in some cases)"},{"location":"cheatsheets/asmx64/#data-reservation-directives-in-bss","title":"Data Reservation Directives in <code>.bss</code>","text":"Directive Meaning Size (Bytes) Example Usage RESB (Reserve Byte) Reserves N bytes 1 byte <code>buffer RESB 100</code> (Reserves 100 bytes) RESW (Reserve Word) Reserves N words 2 bytes <code>array RESW 10</code> (Reserves 10 \u00d7 2 bytes = 20 bytes) RESD (Reserve Doubleword) Reserves N doublewords 4 bytes <code>arr RESD 5</code> (Reserves 5 \u00d7 4 bytes = 20 bytes) RESQ (Reserve Quadword) Reserves N quadwords 8 bytes <code>data RESQ 3</code> (Reserves 3 \u00d7 8 bytes = 24 bytes) REST (Reserve Ten Bytes) Reserves N ten-byte values 10 bytes <code>bigData REST 2</code> (Reserves 20 bytes)"},{"location":"cheatsheets/asmx64/#arithmetic-instructions","title":"Arithmetic instructions","text":"<pre><code>add rax, 1    ; Adds 1 to RAX.\nsub rax, rdi  ; Subtracts the value of RDI from RAX and stores the result in RAX.\nmul rsi       ; Multiplies RAX by RSI and stores the result in RAX.\ndiv rbx       ; Divides RAX by RBX, storing the quotient in RAX and the remainder in RDX.\n\nand rax, rcx  ; Performs a bitwise AND between RAX and RCX, storing the result in RAX.\nor rdx, 1     ; Performs a bitwise OR between RDX and 1, storing the result in RDX.\nxor rsi, rsi  ; Performs a bitwise XOR between RSI and itself (zeroing RSI).\nnot rbx       ; Inverts every bit of RBX.\n</code></pre>"},{"location":"cheatsheets/asmx64/#system-calls","title":"System calls","text":""},{"location":"cheatsheets/asmx64/#read","title":"Read","text":"<ul> <li><code>rax</code> Syscall number (0 for read)</li> <li><code>rdi</code> File descriptor (0 for stdin)</li> <li><code>rsi</code> Buffer to store the input</li> <li><code>rdx</code> Number of bytes to read</li> </ul> <p>Return : Number of bytes read in <code>rax</code>, 0 if EOF</p> <pre><code>section .bss\n    buffer resb 10  ; Reserve 10 bytes for input\n...\n    mov rax, 0       ; sys_read\n    mov rdi, 0       ; stdin\n    mov rsi, buffer  ; buffer address\n    mov rdx, 10      ; read up to 10 bytes\n    syscall\n</code></pre>"},{"location":"cheatsheets/asmx64/#write","title":"Write","text":"<ul> <li><code>rax</code> Syscall number (1 for write)</li> <li><code>rdi</code> File descriptor (1 for standard output)</li> <li><code>rsi</code> Pointer to the string (buffer) to write</li> <li><code>rdx</code> Number of bytes to write</li> </ul> <p>Return : Number of bytes written in <code>rax</code></p> <p>Example: Writing message to stdout</p> <pre><code>    mov rax, 1         ; sys_write\n    mov rdi, 1         ; stdout\n    mov rsi, msg       ; message address\n    mov rdx, msg_len   ; message length\n    syscall\n</code></pre>"},{"location":"cheatsheets/asmx64/#open","title":"Open","text":"<ul> <li><code>rax</code> Syscall number (2 for open)</li> <li><code>rdi</code> Pointer to filename</li> <li><code>rsi</code> Flags (0 = read-only, 1 = write-only, 2 = read/write)</li> <li><code>rdx</code> File permissions (only if creating a file)</li> </ul> <p>Return : File descriptor in <code>rax</code></p> <p>Example: Open a file for reading</p> <pre><code>    mov rax, 2        ; sys_open\n    mov rdi, filename ; file name\n    mov rsi, 0        ; O_RDONLY\n    syscall\n</code></pre> <p>Example: Creating or append a file</p> <pre><code>    mov rax, 2  ; sys_open\n    mov rdi, filename  ; file name\n    mov rsi, 0x441 ; O_WRONLY | O_CREAT | O_APPEND\n    mov rdx, 0o666 ; rw-rw-rw-\n    syscall\n</code></pre>"},{"location":"cheatsheets/asmx64/#close","title":"Close","text":"<ul> <li><code>rax</code> Syscall number (3 for close)</li> <li><code>rdi</code> File descriptor to close</li> </ul> <p>Example: Closing a file descriptor (fd)</p> <pre><code>    mov rax, 3  ; sys_close\n    mov rdi, fd ; file descriptor\n    syscall\n</code></pre>"},{"location":"cheatsheets/asmx64/#exit","title":"Exit","text":"<ul> <li><code>rax</code> Syscall number (60 for exit)</li> <li><code>rdi</code> Exit status (0 = success, nonzero = error)</li> </ul> <p>Example: Exit with status 0</p> <pre><code>    mov rax, 60  ; sys_exit\n    xor rdi, rdi ; exit(0)\n    syscall\n</code></pre>"},{"location":"cheatsheets/asmx64/#socket","title":"Socket","text":"<ul> <li><code>rax</code> Syscall number (41 for socket)</li> <li><code>rdi</code> Address family (2 for AF_INET)</li> <li><code>rsi</code> Socket type (1 for SOCK_STREAM)</li> <li><code>rdx</code> Protocol (0 for default)</li> </ul> <p>Return : Socket file descriptor in <code>rax</code></p> <p>Example: Create an IPv4 TCP socket</p> <pre><code>    mov rax, 41     ; sys_socket\n    mov rdi, 2      ; AF_INET\n    mov rsi, 1      ; SOCK_STREAM\n    xor rdx, rdx    ; protocol 0\n    syscall\n</code></pre>"},{"location":"cheatsheets/asmx64/#bind","title":"Bind","text":"<ul> <li><code>rax</code> Syscall number (49 for bind)</li> <li><code>rdi</code> Socket file descriptor</li> <li><code>rsi</code> Pointer to sockaddr structure</li> <li><code>rdx</code> Size of the sockaddr structure</li> </ul> <p>Example: Bind a socket</p> <pre><code>section .data\n    sockaddr_in:\n        .sin_family dw 2 ; AF_INET\n        .sin_port   dw 0x3905 ; Port 1337 (little-endian: 0x0539)\n        .sin_addr   dd 0 ; INADDR_ANY (0.0.0.0)\n...\n    mov rax, 49      ; sys_bind\n    mov rdi, sockfd  ; socket file descriptor\n    mov rsi, sockaddr; pointer to sockaddr structure\n    mov rdx, 16      ; size of sockaddr_in\n    syscall\n</code></pre>"},{"location":"cheatsheets/asmx64/#recvfrom","title":"Recvfrom","text":"<ul> <li><code>rax</code> Syscall number (45 for recvfrom)</li> <li><code>rdi</code> Socket file descriptor</li> <li><code>rsi</code> Pointer to buffer for received data</li> <li><code>rdx</code> Maximum number of bytes to receive</li> <li><code>r10</code> Flags</li> <li><code>r8</code>  Pointer to sender\u2019s address</li> <li><code>r9</code>  Pointer to sender\u2019s address length</li> </ul> <p>Return : Number of bytes received in <code>rax</code></p> <p>Example: Receive data from a socket</p> <pre><code>    mov rax, 45      ; sys_recvfrom\n    mov rdi, sockfd  ; socket descriptor\n    mov rsi, buffer  ; buffer address\n    mov rdx, 1024    ; max bytes to receive\n    xor r10, r10     ; flags = 0\n    xor r8, r8       ; no sender address\n    xor r9, r9       ; no sender length\n    syscall\n</code></pre>"},{"location":"cheatsheets/ffmpeg/","title":"FFMPEG Cheatsheets","text":""},{"location":"cheatsheets/ffmpeg/#set-a-specific-video-bitrate","title":"Set a Specific Video Bitrate","text":"<pre><code>ffmpeg -i input.mp4 -b:v 2000k -c:v libx264 -c:a copy output.mp4\n</code></pre> <ul> <li><code>-b:v 2000k</code> : Sets video bitrate to 2000 kbps.</li> <li><code>-c:v libx264</code> : Ensures H.264 encoding.</li> </ul>"},{"location":"cheatsheets/ffmpeg/#extract-a-single-frame-at-a-specific-time","title":"Extract a Single Frame at a Specific Time","text":"<pre><code>ffmpeg -i input.mp4 -ss 00:00:05 -vframes 1 output.png\n</code></pre> <ul> <li><code>-ss 00:00:05</code> : Seeks to 5 seconds.</li> <li><code>-vframes 1</code> : Extracts one frame.</li> <li><code>output.png</code> : Saves as a PNG (can be .jpg or .bmp).</li> </ul>"},{"location":"cheatsheets/ffmpeg/#extractcut-video","title":"Extract/Cut video","text":"<pre><code>ffmpeg -i input.mp4 -ss 00:00:00 -to 00:01:30 -c copy output.mp4\n</code></pre> <ul> <li><code>-ss 00:00:00</code> : Sets the start time (hh:mm:ss), in this case, from 0:00.</li> <li><code>-to 00:01:30</code> : Sets the end time at 1 minute 30 seconds.</li> </ul>"},{"location":"cheatsheets/linux/","title":"Linux notes","text":""},{"location":"cheatsheets/linux/#how-to-configure-a-hostname-on-a-linux","title":"How to configure a hostname on a Linux","text":"<p>Modify the system's name temporarily</p> <pre><code>hostname demo.example.com\n</code></pre> <p>Modify the system's name permanently</p> <pre><code>hostnamectl set-hostname demo.example.com\n</code></pre> <p>You can confirm this entry by displaying the <code>/etc/hostname</code> file contents.</p>"},{"location":"cheatsheets/linux/#set-static-ip-address","title":"Set static ip address","text":""},{"location":"cheatsheets/linux/#check-what-your-network-manager","title":"Check what your network manager:","text":"<pre><code>ps aux | grep -E 'dhcpcd|NetworkManager|systemd-networkd'\n</code></pre>"},{"location":"cheatsheets/linux/#dhcpcd","title":"DHCPCD","text":"<p>Edit the file in <code>/etc/dhcpcd.conf</code></p> <p>Add this section :</p> <pre><code>interface wlan0\nstatic ip_address=192.168.x.x/24\nstatic routers=192.168.x.x\n</code></pre> <p>Restart or reboot:</p> <pre><code>sudo systemctl restart dhcpcd\n</code></pre>"},{"location":"cheatsheets/linux/#networkmanager","title":"NetworkManager","text":"<p>Using <code>nmcli</code> :</p> <pre><code>nmcli connection show\nnmcli connection modify &lt;YourWifiConnection&gt; ipv4.method manual ipv4.addresses 192.168.x.x/24 ipv4.gateway 192.168.x.x\nnmcli connection modify &lt;YourWifiConnection&gt; ipv4.dns-priority -1\nnmcli connection down &lt;YourWifiConnection&gt; &amp;&amp; nmcli connection up &lt;YourWifiConnection&gt;\n</code></pre> <p>Mannualy :</p> <p>Edit the file in <code>/etc/NetworkManager/system-connections/&lt;YourWifiProfile&gt;</code></p> <p>In the [ipv4] section:</p> <pre><code>[ipv4]\nmethod=manual\naddress1=192.168.x.x/24,192.168.x.x\n</code></pre> <p>Save and apply:</p> <pre><code>sudo chmod 600 /etc/NetworkManager/system-connections/MyWifiConnection.nmconnection\nsudo systemctl restart NetworkManager\n</code></pre>"},{"location":"cheatsheets/linux/#manual-configuration-on-ubuntu-based-systems","title":"Manual configuration (on Ubuntu-based systems)","text":"<p>Edit the network configuration:</p> <pre><code>sudo nano /etc/network/interfaces\n</code></pre> <p>Add or modify the following lines:</p> <pre><code>allow-hotplug ethX\niface ethX inet static\n    address 192.168.x.x\n    netmask 255.255.255.0\n    gateway 192.168.x.x\n</code></pre> <p>Restart networking:</p> <pre><code>sudo systemctl restart networking\n</code></pre>"},{"location":"cheatsheets/linux/#file-permissions","title":"File permissions","text":"<pre><code>drwxr-xr-x 2 owner group *.*K ****-**-** **:** docs\n-rw-r--r-- 1 owner group *.*K ****-**-** **:** document.txt\nlrwxrwxrwx 2 owner group *.*K ****-**-** **:** team.docs\n</code></pre> <p>File type ; User ; Group ; Everyone</p> <p>File types :</p> <ul> <li><code>d</code> Directory</li> <li><code>-</code> Regular file</li> <li><code>l</code> Symbolic Link</li> </ul> <p>Permissions digits :</p> <ul> <li><code>r</code> (read): 4</li> <li><code>w</code> (write): 2</li> <li><code>x</code> (execute): 1</li> </ul>"},{"location":"cheatsheets/linux/#change-folder-owner","title":"Change folder owner","text":"<pre><code>chown -R &lt;user&gt;:&lt;group&gt; &lt;folder_path&gt;\n</code></pre>"},{"location":"cheatsheets/linux/#configure-ssh-key-authentification-based","title":"Configure SSH key authentification based","text":"<p>Make sure your server have a <code>.ssh/authorized_keys</code> in the home of the user.</p> <p>Generate a key for the client :</p> <pre><code>ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre> <p>You can then use ssh-copy-id @ to copy the key to the server authorized_keys <p>In the server : Edit /etc/ssh/sshd_config:</p> <p>And change these :</p> <pre><code>...\nPubkeyAuthentication yes\n...\nAuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2\n...\nPasswordAuthentication no\n...\n</code></pre>"},{"location":"cheatsheets/linux/#crontab","title":"Crontab","text":"<p>Create a crontab :</p> <pre><code>crontab -e\n</code></pre> <p>Path of crontabs is in <code>/var/spool/cron/crontabs</code>.</p>"},{"location":"cheatsheets/linux/#connection-shell","title":"Connection shell","text":"<p>You can configure a user's login shell by editing the <code>/etc/passwd</code> file. To allow shell access, specify a valid shell such as <code>/bin/bash</code>, <code>/bin/sh</code>, or any other available shell on the system. To prevent a user from logging in with a shell, set their shell to <code>/usr/sbin/nologin</code>.</p>"},{"location":"cheatsheets/linux/#create-an-user","title":"Create an user","text":""},{"location":"cheatsheets/linux/#create-service-account","title":"Create service account","text":"<p>useradd -d  -s  -r"},{"location":"cheatsheets/linux/#ssl","title":"SSL","text":""},{"location":"cheatsheets/linux/#generate-ssl-key","title":"Generate ssl key","text":"<ul> <li>Key generation : <code>genpkey</code></li> <li>Certificat request : <code>req (-x509)</code></li> <li>Certificat signing : <code>x509</code></li> <li>Verify certification chain : <code>verify</code></li> </ul> <p>Note: Since 2016, Firefox has disabled the Domain Name; it must now be done with a SAN (v1).</p> <p>Model generation v3.</p>"},{"location":"cheatsheets/linux/#rca","title":"RCA","text":"<p>Generate RCA key :</p> <pre><code>openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:4096 -out rca.key\n</code></pre> <p>Create RCA configuration :</p> <pre><code>[req]\nprompt = no\ndistinguished_name = dn\nreq_extensions = ext\n\n[dn]\nCN = &lt;Commun Name&gt;\nO = &lt;Organization&gt;\n\n[ext]\nsubjectAltName = DNS:*.&lt;my-domain&gt;\n</code></pre> <p>NB : You can precise DNS or IP</p> <p>Generate RCA certificat :</p> <pre><code>openssl req -x509 -key rca.key -out rca.crt -days 365 -config conf_rca\n</code></pre> <p>Check certificat:</p> <pre><code>openssl x509 -nout -text -in rca.crt\n</code></pre>"},{"location":"cheatsheets/linux/#ica-intermediate-ca","title":"ICA (Intermediate CA)","text":"<p>Generate ICA key :</p> <pre><code>openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:4096 -out ica.key\n</code></pre> <p>Create ICA configuration :</p> <pre><code>[req]\nprompt = no\ndistinguished_name = dn\nreq_extensions = ext\nx509_extensions = ext\n\n[dn]\nCN = &lt;Commun Name&gt;\nO = &lt;Organization&gt;\n\n[ext]\nbasicConstraints = CA:true\nsubjectAltName = DNS:*.&lt;my-domain&gt;\n</code></pre> <p>On a ajouter x509_extensions = ext</p> <p>Generate ICA certificat :</p> <pre><code>openssl req -x509 -key ica.key -out ica.crt -CA rca.crt -CAkey rca.key -days 365 -config conf_ica\n</code></pre> <p>-CA : auto qui va signer ce cert</p> <p>Vertifier que la chaine est valide :</p> <pre><code>openssl verify -CAfile rca.crt ica.crt\n</code></pre> <p>Check certificat:</p> <pre><code>openssl x509 -nout -text -in ica.crt\n</code></pre>"},{"location":"cheatsheets/linux/#ca-web","title":"CA Web","text":"<p>Generate CA key :</p> <pre><code>openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:4096 -out web.key\n</code></pre> <p>Create CA configuration :</p> <pre><code>[req]\nprompt = no\ndistinguished_name = dn\nreq_extensions = ext\nx509_extensions = ext\n\n[dn]\nCN = &lt;Commun Name&gt;\nO = &lt;Organization&gt;\n\n[ext]\nbasicConstraints = CA:false\nsubjectAltName = DNS:web.&lt;my-domain&gt;\n</code></pre> <p>Generate CA certificat :</p> <pre><code>openssl req -x509 -key web.key -out web.crt -CA ica.crt -CAkey ica.key -days 365 -config conf_web\n</code></pre> <p>Verify full chain:</p> <pre><code>cat ica.crt rca.crt &gt; chain.crt\nopenssl verify -CAfile chain.crt web.crt\n</code></pre>"},{"location":"cheatsheets/vim/","title":"Vim CheatSheet","text":""},{"location":"cheatsheets/vim/#exiting","title":"Exiting","text":"Exiting <code>:q</code> Close file <code>:qa</code> Close all files <code>:w</code> Save <code>:wq</code>  / <code>:x</code> Save and close file <code>ZZ</code> Save and quit <code>:q!</code>/ <code>ZQ</code> Quit without checking changes"},{"location":"siem/wazuh/","title":"Wazuh","text":"<p>https://documentation.wazuh.com/current/installation-guide/wazuh-indexer/step-by-step.html</p> <p>https://documentation.wazuh.com/current/installation-guide/wazuh-server/step-by-step.html</p> <p>https://documentation.wazuh.com/current/installation-guide/wazuh-dashboard/step-by-step.html</p> <p>https://documentation.wazuh.com/current/installation-guide/wazuh-agent/wazuh-agent-package-linux.html</p> <p>https://documentation.wazuh.com/current/installation-guide/wazuh-agent/wazuh-agent-package-windows.html</p> <p>https://documentation.wazuh.com/current/installation-guide/wazuh-agent/wazuh-agent-package-macos.html</p>"}]}